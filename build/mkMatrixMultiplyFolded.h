/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Fri Feb 24 16:35:41 EST 2023
 * 
 */

/* Generation options: */
#ifndef __mkMatrixMultiplyFolded_h__
#define __mkMatrixMultiplyFolded_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkMatrixMultiplyFolded module */
class MOD_mkMatrixMultiplyFolded : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_BRAM<tUInt8,tUWide,tUInt8> INST_a_memory;
  MOD_Reg<tUInt8> INST_a_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_a_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_a_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_a_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_a_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_a_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_a_serverAdapter_outData_dequeueing;
  MOD_Wire<tUWide> INST_a_serverAdapter_outData_enqw;
  MOD_Fifo<tUWide> INST_a_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_a_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_a_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_a_serverAdapter_writeWithResp;
  MOD_BRAM<tUInt8,tUWide,tUInt8> INST_b_memory;
  MOD_Reg<tUInt8> INST_b_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_b_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_b_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_b_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_b_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_b_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_b_serverAdapter_outData_dequeueing;
  MOD_Wire<tUWide> INST_b_serverAdapter_outData_enqw;
  MOD_Fifo<tUWide> INST_b_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_b_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_b_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_b_serverAdapter_writeWithResp;
  MOD_BRAM<tUInt8,tUWide,tUInt8> INST_c_memory;
  MOD_Reg<tUInt8> INST_c_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_c_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_c_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_c_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_c_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_c_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_c_serverAdapter_outData_dequeueing;
  MOD_Wire<tUWide> INST_c_serverAdapter_outData_enqw;
  MOD_Fifo<tUWide> INST_c_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_c_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_c_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_c_serverAdapter_writeWithResp;
  MOD_Reg<tUInt8> INST_col_read_idx;
  MOD_Reg<tUInt32> INST_element_count;
  MOD_Reg<tUInt8> INST_every_row_idx;
  MOD_Reg<tUInt8> INST_load_row_idx_a;
  MOD_Reg<tUInt8> INST_load_row_idx_b;
  MOD_Reg<tUInt8> INST_mult_ready;
  MOD_Reg<tUInt32> INST_product;
  MOD_Reg<tUInt8> INST_product_col;
  MOD_Reg<tUInt8> INST_product_row;
  MOD_Reg<tUInt8> INST_reading_col;
  MOD_Reg<tUInt8> INST_reading_col_bram;
  MOD_Reg<tUInt8> INST_reading_row;
  MOD_Reg<tUInt8> INST_reading_row_bram;
  MOD_Reg<tUInt8> INST_resp_ready;
  MOD_Reg<tUInt8> INST_resp_row_idx;
  MOD_Reg<tUWide> INST_row_a;
  MOD_Reg<tUWide> INST_row_a_load;
  MOD_Reg<tUWide> INST_row_b;
  MOD_Reg<tUWide> INST_row_b_load;
  MOD_Reg<tUWide> INST_row_c;
  MOD_Reg<tUWide> INST_row_c_resp;
  MOD_Reg<tUInt8> INST_row_read_idx;
  MOD_Reg<tUWide> INST_temp;
  MOD_Reg<tUInt8> INST_valid_a;
  MOD_Reg<tUInt8> INST_valid_b;
  MOD_Reg<tUInt8> INST_valid_c;
  MOD_Reg<tUInt8> INST_valid_res_respond_c;
  MOD_Reg<tUInt8> INST_valid_write_c;
  MOD_Reg<tUInt8> INST_write_c_id;
 
 /* Constructor */
 public:
  MOD_mkMatrixMultiplyFolded(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_resp_row_c;
  tUWide PORT_load_row_a_row;
  tUWide PORT_load_row_b_row;
  tUWide PORT_resp_row_c;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_resp_row_c;
  tUInt8 DEF_resp_ready__h66048;
  tUInt8 DEF_NOT_mult_ready_70___d513;
  tUInt8 DEF_NOT_valid_c_26___d227;
  tUInt8 DEF_NOT_resp_ready_25___d526;
  tUInt8 DEF_write_c_id_66_ULT_16___d367;
  tUInt8 DEF_i__h56398;
  tUInt8 DEF_x2__h45977;
  tUInt8 DEF_b__h34468;
  tUInt8 DEF_b__h27344;
  tUInt8 DEF_b__h20215;
  tUInt8 DEF_c_serverAdapter_s1___d130;
  tUInt8 DEF_b_serverAdapter_s1___d82;
  tUInt8 DEF_a_serverAdapter_s1___d34;
  tUInt8 DEF_c_serverAdapter_cnt_3_whas____d109;
  tUInt8 DEF_c_serverAdapter_cnt_2_whas____d107;
  tUInt8 DEF_c_serverAdapter_cnt_1_whas____d106;
  tUInt8 DEF_c_serverAdapter_outData_ff_i_notEmpty____d101;
  tUInt8 DEF_b_serverAdapter_cnt_3_whas____d61;
  tUInt8 DEF_b_serverAdapter_cnt_2_whas____d59;
  tUInt8 DEF_b_serverAdapter_cnt_1_whas____d58;
  tUInt8 DEF_b_serverAdapter_outData_ff_i_notEmpty____d53;
  tUInt8 DEF_a_serverAdapter_cnt_3_whas____d12;
  tUInt8 DEF_a_serverAdapter_cnt_2_whas____d10;
  tUInt8 DEF_a_serverAdapter_cnt_1_whas____d9;
  tUInt8 DEF_a_serverAdapter_outData_ff_i_notEmpty____d4;
  tUInt8 DEF_mult_ready__h54343;
  tUInt8 DEF_valid_c__h41186;
  tUInt8 DEF_valid_b__h39133;
  tUInt8 DEF_valid_a__h37086;
  tUInt8 DEF_c_serverAdapter_s1_30_BIT_0___d131;
  tUInt8 DEF_b_serverAdapter_s1_2_BIT_0___d83;
  tUInt8 DEF_a_serverAdapter_s1_4_BIT_0___d35;
  tUInt8 DEF_every_row_idx_57_EQ_0___d203;
  tUInt8 DEF_every_row_idx_57_EQ_1___d200;
  tUInt8 DEF_every_row_idx_57_EQ_2___d197;
  tUInt8 DEF_every_row_idx_57_EQ_3___d194;
  tUInt8 DEF_every_row_idx_57_EQ_4___d191;
  tUInt8 DEF_every_row_idx_57_EQ_5___d188;
  tUInt8 DEF_every_row_idx_57_EQ_6___d185;
  tUInt8 DEF_every_row_idx_57_EQ_7___d182;
  tUInt8 DEF_every_row_idx_57_EQ_8___d179;
  tUInt8 DEF_every_row_idx_57_EQ_9___d176;
  tUInt8 DEF_every_row_idx_57_EQ_10___d173;
  tUInt8 DEF_every_row_idx_57_EQ_11___d170;
  tUInt8 DEF_every_row_idx_57_EQ_12___d167;
  tUInt8 DEF_every_row_idx_57_EQ_13___d164;
  tUInt8 DEF_every_row_idx_57_EQ_14___d161;
  tUInt8 DEF_every_row_idx_57_EQ_15___d158;
  tUInt8 DEF_NOT_every_row_idx_57_EQ_15_58___d159;
  tUInt8 DEF_NOT_valid_b_52___d229;
  tUInt8 DEF_NOT_valid_a_47___d355;
 
 /* Local definitions */
 private:
  tUWide DEF_c_serverAdapter_outData_enqw_wget____d104;
  tUWide DEF_c_serverAdapter_outData_ff_first____d521;
  tUWide DEF_c_memory_read____d137;
  tUWide DEF_b_serverAdapter_outData_enqw_wget____d56;
  tUWide DEF_b_serverAdapter_outData_ff_first____d232;
  tUWide DEF_b_memory_read____d89;
  tUWide DEF_a_serverAdapter_outData_enqw_wget____d7;
  tUWide DEF_a_serverAdapter_outData_ff_first____d358;
  tUWide DEF_a_memory_read____d41;
  tUWide DEF_row_c_resp__h71391;
  tUWide DEF_row_b_load__h40205;
  tUWide DEF_row_a_load__h38158;
  tUWide DEF_row_c__h55427;
  tUWide DEF_row_b__h44829;
  tUWide DEF_row_a__h57885;
  tUInt32 DEF_x__h59592;
  tUInt8 DEF_x2__h59832;
  tUInt8 DEF_x__h59756;
  tUInt32 DEF_row_b_00_BITS_511_TO_480___d301;
  tUInt32 DEF_row_b_00_BITS_479_TO_448___d303;
  tUInt32 DEF_row_b_00_BITS_447_TO_416___d306;
  tUInt32 DEF_row_b_00_BITS_415_TO_384___d308;
  tUInt32 DEF_row_b_00_BITS_383_TO_352___d311;
  tUInt32 DEF_row_b_00_BITS_351_TO_320___d313;
  tUInt32 DEF_row_b_00_BITS_319_TO_288___d316;
  tUInt32 DEF_row_b_00_BITS_287_TO_256___d318;
  tUInt32 DEF_row_b_00_BITS_255_TO_224___d321;
  tUInt32 DEF_row_b_00_BITS_223_TO_192___d323;
  tUInt32 DEF_row_b_00_BITS_191_TO_160___d326;
  tUInt32 DEF_row_b_00_BITS_159_TO_128___d328;
  tUInt32 DEF_row_b_00_BITS_127_TO_96___d331;
  tUInt32 DEF_row_b_00_BITS_95_TO_64___d333;
  tUInt32 DEF_row_b_00_BITS_63_TO_32___d336;
  tUInt32 DEF_row_b_00_BITS_31_TO_0___d338;
  tUWide DEF_IF_c_serverAdapter_outData_ff_i_notEmpty__01_T_ETC___d523;
  tUWide DEF_IF_c_serverAdapter_outData_enqw_whas__8_THEN_c_ETC___d522;
  tUWide DEF_IF_a_serverAdapter_outData_ff_i_notEmpty_THEN__ETC___d360;
  tUWide DEF_IF_a_serverAdapter_outData_enqw_whas_THEN_a_se_ETC___d359;
  tUInt8 DEF__0_CONCAT_DONTCARE___d25;
  tUWide DEF_IF_every_row_idx_57_EQ_15_58_THEN_SEL_ARR_IF_b_ETC___d340;
  tUWide DEF_IF_every_row_idx_57_EQ_15_58_THEN_SEL_ARR_IF_b_ETC___d335;
  tUWide DEF_IF_write_c_id_66_EQ_15_75_THEN_row_a_83_BITS_3_ETC___d502;
  tUWide DEF_IF_write_c_id_66_EQ_15_75_THEN_row_a_83_BITS_3_ETC___d495;
  tUWide DEF_IF_every_row_idx_57_EQ_15_58_THEN_SEL_ARR_IF_b_ETC___d330;
  tUWide DEF_IF_write_c_id_66_EQ_15_75_THEN_row_a_83_BITS_3_ETC___d488;
  tUWide DEF_IF_every_row_idx_57_EQ_15_58_THEN_SEL_ARR_IF_b_ETC___d325;
  tUWide DEF_IF_write_c_id_66_EQ_15_75_THEN_row_a_83_BITS_3_ETC___d481;
  tUWide DEF_IF_every_row_idx_57_EQ_15_58_THEN_SEL_ARR_IF_b_ETC___d320;
  tUWide DEF_IF_write_c_id_66_EQ_15_75_THEN_row_a_83_BITS_3_ETC___d474;
  tUWide DEF_IF_every_row_idx_57_EQ_15_58_THEN_SEL_ARR_IF_b_ETC___d315;
  tUWide DEF_IF_write_c_id_66_EQ_15_75_THEN_row_a_83_BITS_3_ETC___d467;
  tUWide DEF_IF_every_row_idx_57_EQ_15_58_THEN_SEL_ARR_IF_b_ETC___d310;
  tUWide DEF_IF_write_c_id_66_EQ_15_75_THEN_row_a_83_BITS_3_ETC___d460;
  tUInt8 DEF_x__h59737;
 
 /* Rules */
 public:
  void RL_a_serverAdapter_outData_enqueue();
  void RL_a_serverAdapter_outData_dequeue();
  void RL_a_serverAdapter_cnt_finalAdd();
  void RL_a_serverAdapter_s1__dreg_update();
  void RL_a_serverAdapter_stageReadResponseAlways();
  void RL_a_serverAdapter_moveToOutFIFO();
  void RL_a_serverAdapter_overRun();
  void RL_b_serverAdapter_outData_enqueue();
  void RL_b_serverAdapter_outData_dequeue();
  void RL_b_serverAdapter_cnt_finalAdd();
  void RL_b_serverAdapter_s1__dreg_update();
  void RL_b_serverAdapter_stageReadResponseAlways();
  void RL_b_serverAdapter_moveToOutFIFO();
  void RL_b_serverAdapter_overRun();
  void RL_c_serverAdapter_outData_enqueue();
  void RL_c_serverAdapter_outData_dequeue();
  void RL_c_serverAdapter_cnt_finalAdd();
  void RL_c_serverAdapter_s1__dreg_update();
  void RL_c_serverAdapter_stageReadResponseAlways();
  void RL_c_serverAdapter_moveToOutFIFO();
  void RL_c_serverAdapter_overRun();
  void RL_load_bram_a();
  void RL_load_bram_b();
  void RL_column_reading();
  void RL_column_reading_bram();
  void RL_row_reading();
  void RL_row_reading_bram();
  void RL_product_ready();
  void RL_multiply();
  void RL_respond_bram_c();
  void RL_res_respond_bram_c();
 
 /* Methods */
 public:
  void METH_load_row_a(tUWide ARG_load_row_a_row, tUInt8 ARG_load_row_a_row_idx);
  tUInt8 METH_RDY_load_row_a();
  void METH_load_row_b(tUWide ARG_load_row_b_row, tUInt8 ARG_load_row_b_row_idx);
  tUInt8 METH_RDY_load_row_b();
  void METH_start();
  tUInt8 METH_RDY_start();
  tUWide METH_resp_row_c();
  tUInt8 METH_RDY_resp_row_c();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMatrixMultiplyFolded &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkMatrixMultiplyFolded &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkMatrixMultiplyFolded &backing);
};

#endif /* ifndef __mkMatrixMultiplyFolded_h__ */
